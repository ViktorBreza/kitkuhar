version: '3.8'

services:
  # Development PostgreSQL Database
  database-dev:
    image: postgres:15-alpine
    container_name: kitkuhar-db-dev
    restart: unless-stopped
    ports:
      - "5432:5432"  # Exposed for direct access during development
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-kitkuhar_dev}
      POSTGRES_USER: ${POSTGRES_USER:-kitkuhar_user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-dev_password}
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - postgres_data_dev:/var/lib/postgresql/data
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    networks:
      - kitkuhar-dev-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-kitkuhar_user} -d ${POSTGRES_DB:-kitkuhar_dev}"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Development Redis
  redis-dev:
    image: redis:7-alpine
    container_name: kitkuhar-redis-dev
    restart: unless-stopped
    ports:
      - "6379:6379"  # Exposed for direct access during development
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD:-dev_redis_password}
    environment:
      REDIS_PASSWORD: ${REDIS_PASSWORD:-dev_redis_password}
    volumes:
      - redis_data_dev:/data
    networks:
      - kitkuhar-dev-network
    healthcheck:
      test: ["CMD", "redis-cli", "--no-auth-warning", "-a", "${REDIS_PASSWORD:-dev_redis_password}", "ping"]
      interval: 10s
      timeout: 3s
      retries: 3

  # Development Backend (FastAPI)
  backend-dev:
    build: 
      context: .
      dockerfile: backend/Dockerfile
    container_name: kitkuhar-backend-dev
    restart: unless-stopped
    ports:
      - "8000:8000"  # Exposed for direct access during development
    environment:
      DATABASE_URL: postgresql://${POSTGRES_USER:-kitkuhar_user}:${POSTGRES_PASSWORD:-dev_password}@database-dev:5432/${POSTGRES_DB:-kitkuhar_dev}
      REDIS_URL: redis://:${REDIS_PASSWORD:-dev_redis_password}@redis-dev:6379
      SECRET_KEY: ${SECRET_KEY:-dev_secret_key_change_in_production}
      ALGORITHM: HS256
      ACCESS_TOKEN_EXPIRE_MINUTES: ${ACCESS_TOKEN_EXPIRE_MINUTES:-1440}  # 24 hours for dev
      ENVIRONMENT: development
      LOG_LEVEL: DEBUG
      ALLOWED_ORIGINS: "http://localhost:3000,http://127.0.0.1:3000,http://localhost,http://127.0.0.1"
      DATABASE_HOST: database-dev
      DATABASE_PORT: 5432
      # Admin user creation (optional)
      ADMIN_EMAIL: ${ADMIN_EMAIL:-admin@localhost}
      ADMIN_USERNAME: ${ADMIN_USERNAME:-admin}
      ADMIN_PASSWORD: ${ADMIN_PASSWORD:-admin123}
    volumes:
      - ./backend:/app  # Mount source code for hot reload
      - media_files_dev:/app/media
      - app_logs_dev:/app/logs
    networks:
      - kitkuhar-dev-network
    depends_on:
      database-dev:
        condition: service_healthy
      redis-dev:
        condition: service_healthy
    entrypoint: ["python", "-m", "uvicorn", "app.main:app", "--host", "0.0.0.0", "--port", "8000", "--reload"]

volumes:
  postgres_data_dev:
    driver: local
  redis_data_dev:
    driver: local
  media_files_dev:
    driver: local
  app_logs_dev:
    driver: local

networks:
  kitkuhar-dev-network:
    driver: bridge